[{"/src/src/reportWebVitals.ts":"1","/src/src/Components/Home.tsx":"2","/src/src/Components/Login.tsx":"3","/src/src/Components/NavBar.tsx":"4","/src/src/Components/App.tsx":"5","/src/src/index.tsx":"6","/src/src/Components/SideMenu.tsx":"7","/src/src/Components/TableView.tsx":"8","/src/src/Components/TableContent.tsx":"9","/src/src/Components/TableInfo.tsx":"10"},{"size":425,"mtime":1606953987533,"results":"11","hashOfConfig":"12"},{"size":1320,"mtime":1608761481000,"results":"13","hashOfConfig":"12"},{"size":3426,"mtime":1607055426681,"results":"14","hashOfConfig":"12"},{"size":518,"mtime":1606953987533,"results":"15","hashOfConfig":"12"},{"size":1664,"mtime":1608093875000,"results":"16","hashOfConfig":"12"},{"size":511,"mtime":1608053271000,"results":"17","hashOfConfig":"12"},{"size":19438,"mtime":1608763011000,"results":"18","hashOfConfig":"12"},{"size":3174,"mtime":1608761509000,"results":"19","hashOfConfig":"12"},{"size":1900,"mtime":1608785913000,"results":"20","hashOfConfig":"12"},{"size":1352,"mtime":1608761912000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hivtr8",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/src/src/reportWebVitals.ts",[],"/src/src/Components/Home.tsx",[],"/src/src/Components/Login.tsx",[],"/src/src/Components/NavBar.tsx",[],"/src/src/Components/App.tsx",[],"/src/src/index.tsx",[],"/src/src/Components/SideMenu.tsx",[],"/src/src/Components/TableView.tsx",[],"/src/src/Components/TableContent.tsx",["43"],"import React from 'react';\nimport './TableContent.css'\n\nclass TableContent extends React.Component<{contentData: Array<any>, tableName: string, tableType: string}> {\n    constructor(props: any) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"table-content-viewer\">\n                <div className={this.props.tableType==='computed' ? 'content-view-header computed ': this.props.tableType==='imported' ? 'content-view-header imported': this.props.tableType==='lookup' ? 'content-view-header lookup': this.props.tableType==='manual' ? 'content-view-header manual': 'content-view-header part'}>\n                    <div className={this.props.tableType==='computed' ? 'computed table-type-tag': this.props.tableType==='imported' ? 'imported table-type-tag': this.props.tableType==='lookup' ? 'lookup table-type-tag': this.props.tableType==='manual' ? 'manual table-type-tag': 'part table-type-tag'}>{this.props.tableType}</div>\n                    <h4 className=\"table-name\">{this.props.tableName}</h4>\n                    <div className=\"content-controllers\">\n                        <button>Filter</button>\n                        <button>Insert</button>\n                        <button>Update</button>\n                        <button>Delete</button>\n                    </div>\n                </div>\n                <div className=\"edit-zone\">Content Edit Zone</div>\n                <div className=\"content-view-area\">\n\n                </div>\n                <div className=\"paginator\">\n                    <p>Total Rows: {this.props.contentData.length}</p>\n                </div>\n                \n                {/* {this.props.contentData.map((tableEntry:any) => {\n                    return (\n                        <div>{tableEntry}</div>\n                    )\n                })} */}\n\n            </div>\n        ) \n    }\n}\n\nexport default TableContent;","/src/src/Components/TableInfo.tsx",[],{"ruleId":"44","severity":1,"message":"45","line":5,"column":5,"nodeType":"46","messageId":"47","endLine":7,"endColumn":6},"@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor"]